#!/usr/bin/env node

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function createUser() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º Clerk ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    const clerkId = process.env.CLERK_USER_ID || process.argv[2]

    if (!clerkId) {
      console.error('‚ùå –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å CLERK_USER_ID –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä')
      console.error('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npm run create-user <clerk_id>')
      process.exit(1)
    }

    console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å Clerk ID: ${clerkId}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existingUser = await prisma.user.findUnique({
      where: { clerkId }
    })

    if (existingUser) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${existingUser.id}`)
      console.log(`üìß Email: ${existingUser.email}`)
      console.log(`üé≠ –†–æ–ª—å: ${existingUser.role}`)
      return existingUser
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üë§ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')

    const newUser = await prisma.user.create({
      data: {
        clerkId,
        email: `${clerkId}@example.com`, // –í—Ä–µ–º–µ–Ω–Ω—ã–π email
        role: 'user',
        subscriptionData: {
          create: {
            tier: 'free',
            requestsUsed: 0,
            requestsLimit: 10
          }
        }
      }
    })

    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${newUser.id}`)
    console.log(`üìß Email: ${newUser.email}`)
    console.log(`üé≠ –†–æ–ª—å: ${newUser.role}`)
    console.log(`üí≥ –ü–æ–¥–ø–∏—Å–∫–∞: ${newUser.subscriptionData?.tier}`)

    return newUser

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
createUser().catch(console.error)
