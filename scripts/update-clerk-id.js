const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function updateClerkId() {
  try {
    const email = 'magistrtheone@gmail.com'
    
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Clerk ID –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    console.log('üìß Email:', email)
    console.log('')
    console.log('–ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Clerk Google:')
    console.log('1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à Clerk User ID –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞')
    console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: node scripts/update-clerk-id.js YOUR_CLERK_ID')
    console.log('')
    
    const clerkId = process.argv[2]
    
    if (!clerkId) {
      console.log('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω Clerk ID')
      console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/update-clerk-id.js YOUR_CLERK_ID')
      return
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º Clerk ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.update({
      where: { email },
      data: { 
        clerkId,
        updatedAt: new Date()
      }
    })
    
    console.log('‚úÖ Clerk ID –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user.email)
    console.log('üÜî Clerk ID:', user.clerkId)
    console.log('üíé –ü–æ–¥–ø–∏—Å–∫–∞:', user.subscription)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminUser = await prisma.adminUser.findUnique({
      where: { email }
    })
    
    if (adminUser) {
      console.log('üëë –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', adminUser.role)
      console.log('üîê –†–∞–∑—Ä–µ—à–µ–Ω–∏—è:', JSON.parse(adminUser.permissions))
    }
    
    console.log('')
    console.log('üéâ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É —Å –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ Owner!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Clerk ID:', error)
  } finally {
    await prisma.$disconnect()
  }
}

updateClerkId()
