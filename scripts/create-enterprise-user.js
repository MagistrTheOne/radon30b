const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function createEnterpriseUser() {
  try {
    const email = 'magistrtheone@gmail.com'
    const userId = 'user_enterprise_owner_' + Date.now() // –í—Ä–µ–º–µ–Ω–Ω—ã–π ID, –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω Clerk ID –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ Enterprise –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    
    // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.upsert({
      where: { email },
      update: {
        subscription: 'enterprise',
        updatedAt: new Date()
      },
      create: {
        id: userId,
        clerkId: userId, // –í—Ä–µ–º–µ–Ω–Ω–æ, –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ Clerk –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        email,
        name: 'MagistrTheOne',
        subscription: 'enterprise',
        createdAt: new Date(),
        updatedAt: new Date()
      }
    })
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω:', user.email)
    
    // 2. –°–æ–∑–¥–∞–µ–º Enterprise –ø–æ–¥–ø–∏—Å–∫—É
    const subscription = await prisma.subscription.upsert({
      where: { userId: user.id },
      update: {
        tier: 'enterprise',
        status: 'active',
        currentPeriodEnd: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000), // 1 –≥–æ–¥
        updatedAt: new Date()
      },
      create: {
        userId: user.id,
        tier: 'enterprise',
        status: 'active',
        currentPeriodEnd: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000), // 1 –≥–æ–¥
        createdAt: new Date(),
        updatedAt: new Date()
      }
    })
    
    console.log('‚úÖ Enterprise –ø–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', subscription.tier)
    
    // 3. –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ Owner –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminUser = await prisma.adminUser.upsert({
      where: { email },
      update: {
        role: 'owner',
        permissions: JSON.stringify([
          'canManageUsers',
          'canManageSubscriptions', 
          'canViewAnalytics',
          'canManageContent',
          'canAccessLogs',
          'canManageSettings'
        ]),
        isActive: true,
        updatedAt: new Date()
      },
      create: {
        userId: user.id,
        email,
        role: 'owner',
        permissions: JSON.stringify([
          'canManageUsers',
          'canManageSubscriptions',
          'canViewAnalytics', 
          'canManageContent',
          'canAccessLogs',
          'canManageSettings'
        ]),
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date()
      }
    })
    
    console.log('‚úÖ –ü—Ä–∞–≤–∞ Owner —Å–æ–∑–¥–∞–Ω—ã:', adminUser.role)
    
    // 4. –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const team = await prisma.team.create({
      data: {
        name: 'MagistrTheOne Enterprise Team',
        ownerId: user.id,
        maxUsers: 1000, // Enterprise –ª–∏–º–∏—Ç
        createdAt: new Date()
      }
    })
    
    console.log('‚úÖ Enterprise –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∞:', team.name)
    
    // 5. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞
    await prisma.teamMember.create({
      data: {
        teamId: team.id,
        userId: user.id,
        role: 'admin',
        createdAt: new Date()
      }
    })
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ –∞–¥–º–∏–Ω')
    
    // 6. –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    const workspace = await prisma.workspace.create({
      data: {
        teamId: team.id,
        name: 'Main Workspace',
        createdAt: new Date()
      }
    })
    
    console.log('‚úÖ –†–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–æ:', workspace.name)
    
    console.log('\nüéâ ENTERPRISE –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù!')
    console.log('üìß Email:', email)
    console.log('üëë –†–æ–ª—å:', 'Owner')
    console.log('üíé –ü–æ–¥–ø–∏—Å–∫–∞:', 'Enterprise')
    console.log('üë• –ö–æ–º–∞–Ω–¥–∞:', team.name)
    console.log('üè¢ –†–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:', workspace.name)
    console.log('\nüìù –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Clerk Google, –æ–±–Ω–æ–≤–∏—Ç–µ clerkId –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createEnterpriseUser()
