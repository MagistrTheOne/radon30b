version: '3.8'

services:
  # Redis for Pub/Sub and Caching
  redis:
    image: redis:alpine
    container_name: radonai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: radonai-postgres
    environment:
      POSTGRES_DB: radonai
      POSTGRES_USER: radonai
      POSTGRES_PASSWORD: radonai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U radonai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    container_name: radonai-api-gateway
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - CHAT_SERVICE_URL=http://chat-service:8002
      - AI_SERVICE_URL=http://ai-service:8001
      - USER_SERVICE_URL=http://user-service:8003
      - SUBSCRIPTION_SERVICE_URL=http://subscription-service:8004
      - FILE_SERVICE_URL=http://file-service:8005
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
    depends_on:
      - redis
      - postgres
      - chat-service
      - ai-service
      - user-service
      - subscription-service
      - file-service

  # AI Service
  ai-service:
    build: ./services/ai-service
    container_name: radonai-ai-service
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - RADON_API_URL=${RADON_API_URL}
      - RADON_API_KEY=${RADON_API_KEY}
      - QWEN_MODEL_PATH=${QWEN_MODEL_PATH}
      - QWEN_USE_LOCAL_MODEL=${QWEN_USE_LOCAL_MODEL}
      - QWEN_DEFAULT_SPEAKER=${QWEN_DEFAULT_SPEAKER}
      - QWEN_USE_AUDIO_IN_VIDEO=${QWEN_USE_AUDIO_IN_VIDEO}
    volumes:
      - ai_model_cache:/root/.cache/huggingface
      - ai_temp_files:/tmp
    depends_on:
      - redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Chat Service
  chat-service:
    build: ./services/chat-service
    container_name: radonai-chat-service
    ports:
      - "8002:8002"
    environment:
      - ENVIRONMENT=development
      - AI_SERVICE_URL=http://ai-service:8001
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
      - ai-service

  # User Service
  user-service:
    build: ./services/user-service
    container_name: radonai-user-service
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=development
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres

  # Subscription Service
  subscription-service:
    build: ./services/subscription-service
    container_name: radonai-subscription-service
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=development
      - REDIS_URL=redis://redis:6379
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    depends_on:
      - redis
      - postgres

  # File Service
  file-service:
    build: ./services/file-service
    container_name: radonai-file-service
    ports:
      - "8005:8005"
    environment:
      - ENVIRONMENT=development
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=52428800
      - REDIS_URL=redis://redis:6379
    volumes:
      - file_uploads:/app/uploads
    depends_on:
      - redis

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: radonai-frontend
    environment:
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - DATABASE_URL=postgresql://radonai:radonai_password@postgres:5432/radonai
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  file_uploads:
  ai_model_cache:
  ai_temp_files:
