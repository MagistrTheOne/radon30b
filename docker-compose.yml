version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: radonai-postgres
    environment:
      POSTGRES_DB: radonai
      POSTGRES_USER: radonai
      POSTGRES_PASSWORD: radonai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U radonai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: radonai-backend
    environment:
      - DATABASE_URL=postgresql://radonai:radonai_password@postgres:5432/radonai
      - RADON_AI_API_KEY=${RADON_AI_API_KEY}
      - RADON_AI_API_URL=${RADON_AI_API_URL}
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: radonai-frontend
    environment:
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - DATABASE_URL=postgresql://radonai:radonai_password@postgres:5432/radonai
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
